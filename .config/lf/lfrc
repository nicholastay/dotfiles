# General
set color256
set drawbox
set icons

# -eu for safer shell commands
set shellopts "-eu"
set ifs "\n"

set previewer ~/.config/lf/preview

# Commands
cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*|inode/x-empty) $EDITOR "$fx";;
    	application/*tar*|application/zip|application/*7z*|application/*rar*) aunpack "$f";;
        *) for f in "$fx"; do xdg-open "$f"> /dev/null 2> /dev/null; done ;;
    esac
}}

cmd zip ${{
    set -f
    fol="$(mktemp -d)"
    curr="$(pwd)"
    cp -r $fx $fol
    zip -r $1.zip .
    mv $1.zip $curr/
    rm -rf $fol
}}

#safer rename
cmd rename %[ -e $1 ] && printf "File already exists" || mv $f $1

cmd trash %trash-put $fx
cmd trash_restore $clear && trash-restore
cmd trash_empty ${{
    clear
    trash-list
    echo -n "\n\nEmpty trash? [y/n] "
    read tt
    [ "$tt" = "y" ] && trash-empty
}}
cmd trash_list $clear && trash-list && read a

# Binds
# Clear some
map c
map d
map r reload
map S $"$SHELL"
map bg $setwp "$f"
map D trash
map TD trash_empty
map Tr trash_restore
map Tl trash_list
map dX delete
map a push %mkdir<space>
map cw push :rename<space>
map cW $vidir
map dd cut
map <c-space> unselect
map P set preview!
map <bs2> set hidden!
map - $~/.config/lf/draw_img "$f"
map X $aunpack "$f"
map Z push :zip<space>
map zd %dragon-drag-and-drop -x "$f"
map zp %libreoffice --convert-to pdf "$f" --headless
map zr &readdoc "$f"

# Jumps
map gh cd ~
map gr cd /
map gm cd /media
map ge cd /etc
map gu cd /usr
map gd cd ~/Downloads
map gD cd ~/Documents
map gS cd ~/Screenshots
map gc cd ~/Cloud
map gt cd ~/.local/share/Trash/files
