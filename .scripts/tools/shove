#!/bin/sh

# This script 'shoves' a (dot)file back into the proper VCS directory
# as managed by GNU Stow. Essentially, it helps moving a file that
# was worked on outside of the ~/.dotfiles directory first, and is
# then VCS ready/decided to be included in VCS later, and removes
# the annoying process of creating the directory structure in the
# .dotfiles directory then moving everything in and running `stow`.
#
# Requires GNU coreutils for now.

BASE_PATH=$HOME
DOTFILES=$HOME/.dotfiles

# Check for correct param count first
[ -z "$2" ] && echo "Usage: $0 MODULE FILE..." && exit

# First get the module and check if exist, if not, ask to create
if [ ! -d "$DOTFILES/$1" ]; then
	echo -n "Module '$1' does not exist. Create it? [yn] "
	read inyn
	[ "$inyn" != "y" ] && echo "Aborting." && exit
	mkdir "$DOTFILES/$1"
	echo "Created module '$1'."
fi

MODULE=$1
shift

for arg; do
	FULL_PATH="$(readlink -f "$arg")"
	REL_PATH="${FULL_PATH##$BASE_PATH/}"

	# Check all files/directories inputted
	# If not exist or is a symlink -> fail
	# If $BASE_PATH is not a parent -> fail (use rel/full path test)
	# If directory is/contains symlinks -> fail
	[ ! -e "$arg" ] && echo "$arg does not exist! Aborting." && exit 1
	[ -h "$arg" ] && echo "$arg is a symbolic link. Aborting." && exit 1
	[ "$REL_PATH" = "$FULL_PATH" ] && echo "$arg does not reside within your home directory. Aborting." && exit 1

	# Now do the directory check
	if [ -d "$arg" ]; then
		for f in $(find $arg); do
			[ -h "$f" ] && echo "$f in $arg is a symbolic link. Aborting." && exit 1
		done
	fi

	# Check for if the file/dir already is in dotfiles?
	[ -e "$DOTFILES/$MODULE/$REL_PATH" ] && echo "$REL_PATH already exists within the '$MODULE' module in dotfiles. Aborting." && exit 1


	# Now for the shoving.
	# First recreate the directory structure if necessary
	DIR_STRUCTURE="$(dirname -- "$REL_PATH")"
	# No need to do so if thing is already just sitting in home ('.').
	# ... or the parent dir already exists.
	[ "$DIR_STRUCTURE" != "." ] && [ ! -d "$DOTFILES/$MODULE/$DIR_STRUCTURE" ] && echo "Creating directory structure $DIR_STRUCTURE." && mkdir -p "$DOTFILES/$MODULE/$DIR_STRUCTURE"

	# Time to move
	echo "Moving $arg into the '$MODULE' module."
	mv "$arg" "$DOTFILES/$MODULE/$DIR_STRUCTURE"
done

echo "Stowing the module to finalise shove."
cd "$DOTFILES"
stow "$MODULE"

echo "Done."
