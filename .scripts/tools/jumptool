#!/bin/sh

confs="\
s	ssh	$HOME/.ssh/config
g	git	$HOME/.config/git/config
r	ranger	$HOME/.config/ranger/rc.conf
v	neovim	$HOME/.config/nvim
vi	neovim-init	$HOME/.config/nvim/init.lua
b	bash	$HOME/.bashrc
z	zsh	$HOME/.zshrc
p	profile	$HOME/.profile
i	sway	$HOME/.config/sway/config
o	i3status-rust	$HOME/.config/i3status-rust/config.toml
a	aliasrc	$HOME/.config/aliasrc
I	inputrc	$HOME/.config/inputrc
f	fontconfig	$HOME/.config/fontconfig/fonts.conf
d	dunst	$HOME/.config/dunst/dunstrc
t	tmux	$HOME/.tmux.conf
A	aliasrc-override	$NT_OVERRIDES/aliasrc
P	profile-override	$NT_OVERRIDES/profile
J	jumptool	$HOME/.scripts/tools/jumptool
Jc	confs-override	$NT_OVERRIDES/confs
Jd	dirs-override	$NT_OVERRIDES/dirs"

dirs="\
C	cloud	$HOME/Nextcloud
d	dev	$HOME/Dev
D	downloads	$HOME/Downloads
c	config	$HOME/.config
s	scripts	$HOME/.scripts
Sb	bar	$HOME/.scripts/bar
Sp	personal	$HOME/.scripts/personal
t	tools	$HOME/.scripts/tools
T	template	$HOME/template
ln	ntaylocal	$HOME/.local/ntay
O	overrides	$NT_OVERRIDES"

[ -f "$NT_OVERRIDES/jumptool_confs" ] && confs="$confs\n$(cat $NT_OVERRIDES/jumptool_confs)"
[ -f "$NT_OVERRIDES/jumptool_dirs" ] && dirs="$dirs\n$(cat $NT_OVERRIDES/jumptool_dirs)"

sel="$2"
selector() {
	choice="$(echo "$1" | cut -d'	' -f 2 | fzf --prompt="$2: ")" || exit 1
	echo "$1" | awk -F'	' '$2 == "'"$choice"'" { print $3; exit; }'
}

case "$1" in
	generate)
		# term generate alias
		: > $HOME/.config/shortcutrc
		echo "$confs" | awk -F'	' '{ print "alias cf" $1 "=\"" "$EDITOR " $3 "\"" }' >> $HOME/.config/shortcutrc
		echo "$dirs" | awk -F'	' '{ print "alias cd" $1 "=\"" "cd " $3 "\"" }' >> $HOME/.config/shortcutrc
		# ranger jumps
		: > $HOME/.config/ranger/shortcut.conf
		echo "$confs" | awk -F'	' '{ print "map C" $1 " cd " $3 }' >> $HOME/.config/ranger/shortcut.conf
		echo "$dirs" | awk -F'	' '{ print "map g" $1 " cd " $3 }' >> $HOME/.config/ranger/shortcut.conf
		;;
	config)
		# pick config
		conf="$(selector "$confs" "edit config?")"
		[ -e "$conf" ] && $EDITOR "$conf"
		;;
	dir)
		# pick dir
		dir="$(selector "$dirs" "jump to?")"
		[ -d "$dir" ] && cd "$dir" && echo "$dir"
		;;
	*)
		echo "usage: $0 <generate|config|dir>"
		exit 1
		;;
esac
